#!/usr/bin/env php
<?php declare(strict_types=1);

/**
 * @package     Triangle Engine (FrameX Project)
 * @link        https://github.com/localzet/FrameX      FrameX Project v1-2
 * @link        https://github.com/Triangle-org/Engine  Triangle Engine v2+
 *
 * @author      Ivan Zorin <creator@localzet.com>
 * @copyright   Copyright (c) 2018-2024 Localzet Group
 * @license     https://www.gnu.org/licenses/agpl AGPL-3.0 license
 *
 *              This program is free software: you can redistribute it and/or modify
 *              it under the terms of the GNU Affero General Public License as
 *              published by the Free Software Foundation, either version 3 of the
 *              License, or (at your option) any later version.
 *
 *              This program is distributed in the hope that it will be useful,
 *              but WITHOUT ANY WARRANTY; without even the implied warranty of
 *              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *              GNU Affero General Public License for more details.
 *
 *              You should have received a copy of the GNU Affero General Public License
 *              along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

require_once __DIR__ . '/vendor/autoload.php';

if (!in_array($argv[1] ?? '', ['start', 'restart', 'stop', 'status', 'reload', 'connections'])) {
    require_once __DIR__ . '/support/bootstrap.php';
} else {
    Triangle\Engine\Environment::load(run_path());
    Triangle\Engine\Config::load(config_path(), ['route', 'container']);
}

$cli = new Triangle\Console();
$command_path = localzet\Console\Util::guessPath(app_path(), '/command', true);
if (is_dir((string)$command_path)) {
    $cli->installCommands($command_path);
}

foreach (config('plugin', []) as $firm => $projects) {
    if (isset($projects['app'])) {
        if ($command_str = localzet\Console\Util::guessPath(base_path() . "/plugin/$firm", 'command')) {
            $command_path = base_path() . "/plugin/$firm/$command_str";
            $cli->installCommands($command_path, "plugin\\$firm\\$command_str");
        }
    }
    foreach ($projects as $name => $project) {
        if (!is_array($project)) {
            continue;
        }
        foreach ($project['command'] ?? [] as $class_name) {
            try {
                $reflection = new ReflectionClass($class_name);
                if ($reflection->isAbstract()) {
                    continue;
                }

                $properties = $reflection->getStaticProperties();

                $name = $properties['defaultName'] ?? null;
                if (!$name) {
                    throw new RuntimeException("У команды $class_name нет defaultName");
                }

                $command = new $class_name(config('plugin.triangle.console.app', []));
                $this->add($command);
            } catch (ReflectionException $e) {
                throw new RuntimeException("Ошибка ReflectionException: {$e->getMessage()}");
            }
        }
    }
}

try {
    $cli->run();
} catch (Exception $e) {
    throw new RuntimeException("Ошибка запуска CLI: {$e->getMessage()}");
}
